{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport personService from './services/persons'; //TODO: create new files for components (separate or joined?)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.number, /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: \"delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\nconst Persons = ({\n  array,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: array.map(person => /*#__PURE__*/_jsxDEV(Person, {\n    name: person.name,\n    number: person.number,\n    onClick: () => onClick(person.id)\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\nconst PersonsForm = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: props.onSubmit,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueName,\n      onChange: props.onChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueNumber,\n      onChange: props.onChangeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n\nconst Filter = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  children: [props.text, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.value,\n    onChange: props.onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 18\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\nconst Notification = ({\n  show,\n  name\n}) => {\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setNewFilter(event.target.value);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (newName === '' || newNumber === '') {\n      alert(\"Name or number cannot be blank\");\n    } else {\n      //In this case, a name is also unique since duplicate addition is prevented and replaced with updating number\n      const person = persons.find(v => v.name.toLowerCase() === newName.toLowerCase());\n\n      if (person) {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          //console.log(person)\n          const changedNumber = { ...person,\n            number: newNumber\n          };\n          personService.update(person.id, changedNumber).then(returnedPerson => {\n            setPersons(persons.map(element => element.id !== person.id ? element : returnedPerson));\n            setNewName('');\n            setNewNumber('');\n          });\n        }\n      } else {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        };\n        personService.create(personObject).then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setShow(true);\n          setTimeout(() => {\n            setShow(false);\n          }, 3000);\n        });\n      }\n    }\n  };\n\n  const deletePerson = id => {\n    const person = persons.find(n => n.id === id);\n\n    if (window.confirm(`delete ${person.name} ?`)) {\n      personService.erase(id).then(newPersons => {\n        setPersons(persons.filter(item => item.id !== person.id));\n      });\n    }\n  };\n\n  const personsFiltered = newFilter === '' ? persons : persons.filter(v => v.name.toLowerCase().includes(newFilter.toLowerCase()) //toLowerCase() is used to handle\n  ); // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n  const notif = show ? 'success' : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      text: 'filter shown with',\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notif\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      show: show,\n      name: newName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonsForm, {\n      onSubmit: addPerson,\n      valueName: newName,\n      onChangeName: handleNameChange,\n      valueNumber: newNumber,\n      onChangeNumber: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      array: personsFiltered,\n      onClick: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["D:/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Person","props","name","number","onClick","Persons","array","map","person","id","PersonsForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","Filter","text","value","onChange","Notification","show","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setShow","handleNameChange","event","target","handleNumberChange","handleFilterChange","getAll","then","initialPersons","addPerson","preventDefault","alert","find","v","toLowerCase","window","confirm","changedNumber","update","returnedPerson","element","personObject","create","concat","setTimeout","deletePerson","n","erase","newPersons","filter","item","personsFiltered","includes","notif"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n//TODO: create new files for components (separate or joined?)\n\nconst Person = (props) =>\n  <div>\n    {props.name} {props.number}\n    <button onClick={props.onClick}>\n    delete\n  </button>\n  </div>\n\nconst Persons = ({array, onClick}) =>\n  <div>\n    {array.map(\n    (person) => <Person key={person.id} name = {person.name} number={person.number} onClick={() => onClick(person.id)}/>\n    )}\n  </div>\n\nconst PersonsForm = (props) =>\n  <form onSubmit = {props.onSubmit}>\n    <div>name: <input value = {props.valueName} onChange = {props.onChangeName}/></div>\n    <div>number: <input value = {props.valueNumber} onChange = {props.onChangeNumber}/></div>\n    <div> <button type=\"submit\">add</button> </div>\n  </form>\n\nconst Filter = (props) =>\n  <form>\n    {props.text} <input value = {props.value} onChange = {props.onChange}/>\n  </form>\n\nconst Notification = ({show, name }) => {\n  if (show) {\n    return (\n      <div>name\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ show, setShow ] = useState(false)\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  const handleFilterChange = event => setNewFilter(event.target.value)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    if (newName === '' || newNumber === '') {\n      alert(\"Name or number cannot be blank\")\n    }\n    else { //In this case, a name is also unique since duplicate addition is prevented and replaced with updating number\n      const person = persons.find(v => v.name.toLowerCase() === newName.toLowerCase())\n      if (person) {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          //console.log(person)\n          const changedNumber = {...person, number: newNumber}\n  \n          personService\n          .update(person.id, changedNumber)\n          .then(returnedPerson => {\n            setPersons(persons.map(element => element.id !== person.id ? element : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n        }\n      }\n      else {\n        const personObject = {\n          name: newName,\n          number: newNumber\n        }\n  \n        personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setShow(true)\n            setTimeout(() => {setShow(false)}, 3000)\n          })\n      }\n    }\n  }\n\n  const deletePerson = id => {\n    const person = persons.find(n => n.id === id)\n\n    if (window.confirm(`delete ${person.name} ?`)) {\n      personService\n      .erase(id)\n      .then(newPersons => {\n        setPersons(persons.filter(item => item.id !== person.id))\n      })\n    }\n  }\n\n  const personsFiltered = (newFilter === '')\n  ? persons\n  : persons.filter(\n    v => v.name.toLowerCase().includes((newFilter).toLowerCase()) //toLowerCase() is used to handle\n    )  // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n  const notif = show ? 'success' : null\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter text = {'filter shown with'} value={newFilter} onChange={handleFilterChange}/>\n\n      <h2>add a new</h2>\n      <div>{notif}</div>\n      <Notification show={show} name = {newName}/>\n      <PersonsForm\n      onSubmit = {addPerson}\n      valueName = {newName} onChangeName = {handleNameChange}\n      valueNumber = {newNumber} onChangeNumber={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <Persons array = {personsFiltered} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}