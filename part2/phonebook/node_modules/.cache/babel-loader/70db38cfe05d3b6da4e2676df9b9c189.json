{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Persons = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.number]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Persons;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [wordFilter, setWordFilter] = useState('');\n  const [isBlank, setIsBlank] = useState(true);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personsNames = persons.map(person => person.name);\n\n    if (personsNames.includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      setPersons(persons.concat(personObject));\n      setNewName('');\n    }\n  };\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilter = event => {\n    if (wordFilter === '') setIsBlank(true);else {\n      setWordFilter(event.target.value);\n      setIsBlank(false);\n    }\n  };\n\n  const personsToShow = isBlank ? persons : persons.filter(v => wordFilter === v);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"filter shown with \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: wordFilter,\n          onChange: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPerson,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"add a new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), personsToShow.map((person, index) => /*#__PURE__*/_jsxDEV(Persons, {\n      name: person.name,\n      number: person.number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 44\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"UrTKhsNmkSQIYnpJtBCfhErriow=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Persons\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","Persons","props","name","number","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","wordFilter","setWordFilter","isBlank","setIsBlank","addPerson","event","preventDefault","personsNames","map","person","includes","alert","personObject","concat","handleNameChange","target","value","handleNumberChange","handleFilter","personsToShow","filter","v","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Persons = (props) =>   \n  <div>{props.name} {props.number}</div>\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ wordFilter, setWordFilter ] = useState('')\n  const [ isBlank, setIsBlank ] = useState(true)\n\n  const addPerson = event => {\n    event.preventDefault()\n    const personsNames = persons.map(person => person.name)\n    if (personsNames.includes(newName)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      setPersons(persons.concat(personObject))\n      setNewName('')\n    }\n  }\n\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  const handleFilter = event => {\n    if (wordFilter === '') \n    setIsBlank(true)\n    else {\n      setWordFilter(event.target.value)\n      setIsBlank(false)\n    }\n  }\n\n  const personsToShow = isBlank\n    ? persons\n    : persons.filter(v => (wordFilter === v))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form>\n        <div>\n          filter shown with <input value={wordFilter} onChange={handleFilter}/>\n        </div>\n      </form>\n\n      <form onSubmit={addPerson}>\n      <h2>add a new</h2>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {personsToShow.map((person,index) => <Persons key={index} name = {person.name} number={person.number}/>)}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}