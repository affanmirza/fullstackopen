{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport personService from './services/persons'; //TODO: reject submit if number or name has no input\n//TODO: create new files for components (separate or joined?)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.number, /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: \"delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\nconst Persons = ({\n  array,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: array.map(person => /*#__PURE__*/_jsxDEV(Person, {\n    name: person.name,\n    number: person.number,\n    onClick: () => onClick(person.id)\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\nconst PersonsForm = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: props.onSubmit,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueName,\n      onChange: props.onChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueNumber,\n      onChange: props.onChangeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\nconst Filter = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  children: [props.text, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.value,\n    onChange: props.onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 18\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setNewFilter(event.target.value);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = persons.find(v => v.name.toLowerCase() === newName.toLowerCase());\n\n    if (person) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        //console.log(person)\n        const changedNumber = { ...person,\n          number: newNumber\n        };\n        personService.update(person.id, changedNumber).then(returnedPerson => {\n          setPersons(persons.map(element => element.id !== person.id ? element : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  }; //Technically, a name is also unique since duplicate addition is prevented and replaced with updating number\n\n\n  const deletePerson = id => {\n    const person = persons.find(n => n.id === id);\n\n    if (window.confirm(`delete ${person.name} ?`)) {\n      personService.erase(id).then(newPersons => {\n        setPersons(persons.filter(item => item.id !== person.id));\n      });\n    }\n  };\n\n  const personsFiltered = newFilter === '' ? persons : persons.filter(v => v.name.toLowerCase().includes(newFilter.toLowerCase()) //toLowerCase() is used to handle\n  ); // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      text: 'filter shown with',\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonsForm, {\n      onSubmit: addPerson,\n      valueName: newName,\n      onChangeName: handleNameChange,\n      valueNumber: newNumber,\n      onChangeNumber: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      array: personsFiltered,\n      onClick: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["D:/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Person","props","name","number","onClick","Persons","array","map","person","id","PersonsForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","Filter","text","value","onChange","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","handleNameChange","event","target","handleNumberChange","handleFilterChange","getAll","then","initialPersons","addPerson","preventDefault","find","v","toLowerCase","window","confirm","changedNumber","update","returnedPerson","element","personObject","create","concat","deletePerson","n","erase","newPersons","filter","item","personsFiltered","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n//TODO: reject submit if number or name has no input\n//TODO: create new files for components (separate or joined?)\n\nconst Person = (props) =>   \n  <div>\n    {props.name} {props.number}\n    <button onClick={props.onClick}>\n    delete\n  </button>\n  </div>\n\n\nconst Persons = ({array, onClick}) =>\n  <div>\n    {array.map(\n    (person) => <Person key={person.id} name = {person.name} number={person.number} onClick={() => onClick(person.id)}/>\n    )}\n  </div>\n\nconst PersonsForm = (props) =>\n  <form onSubmit = {props.onSubmit}>\n    <div>name: <input value = {props.valueName} onChange = {props.onChangeName}/></div>\n    <div>number: <input value = {props.valueNumber} onChange = {props.onChangeNumber}/></div>\n    <div> <button type=\"submit\">add</button> </div>\n  </form>\n\nconst Filter = (props) =>\n  <form>\n    {props.text} <input value = {props.value} onChange = {props.onChange}/>\n  </form>\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  const handleFilterChange = event => setNewFilter(event.target.value)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    const person = persons.find(v => v.name.toLowerCase() === newName.toLowerCase())\n    if (person) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        //console.log(person)\n        const changedNumber = {...person, number: newNumber}\n\n        personService\n        .update(person.id, changedNumber)\n        .then(returnedPerson => {\n          setPersons(persons.map(element => element.id !== person.id ? element : returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  //Technically, a name is also unique since duplicate addition is prevented and replaced with updating number\n\n\n  const deletePerson = id => {\n    const person = persons.find(n => n.id === id)\n\n    if (window.confirm(`delete ${person.name} ?`)) {\n      personService\n      .erase(id)\n      .then(newPersons => {\n        setPersons(persons.filter(item => item.id !== person.id))\n      })\n    }\n  }\n\n const personsFiltered = (newFilter === '')\n ? persons\n : persons.filter(\n   v => v.name.toLowerCase().includes((newFilter).toLowerCase()) //toLowerCase() is used to handle\n   )  // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter text = {'filter shown with'} value={newFilter} onChange={handleFilterChange}/>\n\n      <h2>add a new</h2>\n      <PersonsForm\n      onSubmit = {addPerson}\n      valueName = {newName} onChangeName = {handleNameChange}\n      valueNumber = {newNumber} onChangeNumber={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <Persons array = {personsFiltered} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}