{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Persons = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Persons;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personsNames = persons.map(person => person.name);\n\n    if (personsNames.includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      const personObject = {\n        name: newName\n      };\n      setPersons(persons.concat(personObject));\n      setNewName('');\n    }\n  };\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPerson,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), persons.map((person, index) => /*#__PURE__*/_jsxDEV(Persons, {\n      name: person.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"s2SZKiB1J9u3ABfbeY9/H39Awug=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Persons\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","Persons","props","name","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","addPerson","event","preventDefault","personsNames","map","person","includes","alert","personObject","concat","handleNameChange","target","value","handleNumberChange","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,iBACd;AAAA,YAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,O;;AAIN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,CACvC;AAAEG,IAAAA,IAAI,EAAE;AAAR,GADuC,CAAD,CAAxC;AAGA,QAAM,CAAEI,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAES,SAAF,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMW,SAAS,GAAGC,KAAK,IAAI;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,YAAY,GAAGT,OAAO,CAACU,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACb,IAA7B,CAArB;;AACA,QAAIW,YAAY,CAACG,QAAb,CAAsBV,OAAtB,CAAJ,EAAoC;AAClCW,MAAAA,KAAK,CAAE,GAAEX,OAAQ,gCAAZ,CAAL;AACD,KAFD,MAGK;AACH,YAAMY,YAAY,GAAG;AACnBhB,QAAAA,IAAI,EAAEI;AADa,OAArB;AAIAD,MAAAA,UAAU,CAACD,OAAO,CAACe,MAAR,CAAeD,YAAf,CAAD,CAAV;AACAX,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAdD;;AAgBA,QAAMa,gBAAgB,GAAGT,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAA5C;;AACA,QAAMC,kBAAkB,GAAGZ,KAAK,IAAIF,YAAY,CAACE,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAhD;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEZ,SAAhB;AAAA,8BACE;AAAA,0CACQ;AAAO,UAAA,KAAK,EAAEJ,OAAd;AAAuB,UAAA,QAAQ,EAAEc;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,4CACQ;AAAO,UAAA,KAAK,EAAEZ,SAAd;AAAyB,UAAA,QAAQ,EAAEe;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGnB,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAAQS,KAAR,kBAAkB,QAAC,OAAD;AAAqB,MAAA,IAAI,EAAIT,MAAM,CAACb;AAApC,OAAcsB,KAAd;AAAA;AAAA;AAAA;AAAA,YAA9B,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5CD;;GAAMrB,G;;MAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Persons = (props) =>   \n  <div>{props.name}</div>\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n\n  const addPerson = event => {\n    event.preventDefault()\n    const personsNames = persons.map(person => person.name)\n    if (personsNames.includes(newName)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else {\n      const personObject = {\n        name: newName\n      }\n\n      setPersons(persons.concat(personObject))\n      setNewName('')\n    }\n  }\n\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n        number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {persons.map((person,index) => <Persons key={index} name = {person.name}/>)}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}