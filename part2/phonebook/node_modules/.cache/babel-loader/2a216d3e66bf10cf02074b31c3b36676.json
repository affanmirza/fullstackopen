{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstackopen\\\\part2\\\\phonebook\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [props.name, \" \", props.number, /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: \"delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\nconst Persons = ({\n  array,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: array.map(person => /*#__PURE__*/_jsxDEV(Person, {\n    name: person.name,\n    number: person.number,\n    onClick: onClickx\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\nconst PersonsForm = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: props.onSubmit,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueName,\n      onChange: props.onChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.valueNumber,\n      onChange: props.onChangeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\nconst Filter = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  children: [props.text, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.value,\n    onChange: props.onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 18\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personsNames = persons.map(person => person.name); //TODO: match case for name input\n\n    if (personsNames.includes(newName)) {\n      //TODO: reject submit if number has no input\n      alert(`${newName} is already added to phonebook`); //TODO: create new files for components (separate or joined?)\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setNewFilter(event.target.value);\n\n  const personsFiltered = newFilter === '' ? persons : persons.filter(v => v.name.toLowerCase().includes(newFilter.toLowerCase()) //toLowerCase() is used to handle\n  ); // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n  const deletePerson = id => {\n    const person = persons.find(n => n.id === id);\n    personService.erase(id).then(newPersons => {\n      console.log(newPersons); //setPersons(newPersons.filter(item => item.id !== person.id))\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      text: 'filter shown with',\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonsForm, {\n      onSubmit: addPerson,\n      valueName: newName,\n      onChangeName: handleNameChange,\n      valueNumber: newNumber,\n      onChangeNumber: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      array: personsFiltered,\n      onClick: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["D:/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","personService","Person","props","name","number","onClick","Persons","array","map","person","onClickx","id","PersonsForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","Filter","text","value","onChange","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","getAll","then","initialPersons","addPerson","event","preventDefault","personsNames","includes","alert","personObject","create","returnedPerson","concat","handleNameChange","target","handleNumberChange","handleFilterChange","personsFiltered","filter","v","toLowerCase","deletePerson","find","n","erase","newPersons","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Person = (props) =>   \n  <div>\n    {props.name} {props.number}\n    <button onClick={props.onClick}>\n    delete\n  </button>\n  </div>\n\n\nconst Persons = ({array, onClick}) =>\n  <div>\n    {array.map(\n    (person) => <Person key={person.id} name = {person.name} number={person.number} onClick={onClickx}/>\n    )}\n  </div>\n\nconst PersonsForm = (props) =>\n  <form onSubmit = {props.onSubmit}>\n    <div>name: <input value = {props.valueName} onChange = {props.onChangeName}/></div>\n    <div>number: <input value = {props.valueNumber} onChange = {props.onChangeNumber}/></div>\n    <div> <button type=\"submit\">add</button> </div>\n  </form>\n\nconst Filter = (props) =>\n  <form>\n    {props.text} <input value = {props.value} onChange = {props.onChange}/>\n  </form>\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = event => {\n    event.preventDefault()\n    const personsNames = persons.map(person => person.name) //TODO: match case for name input\n    if (personsNames.includes(newName)) {                   //TODO: reject submit if number has no input\n      alert(`${newName} is already added to phonebook`)     //TODO: create new files for components (separate or joined?)\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  const handleFilterChange = event => setNewFilter(event.target.value)\n\n  const personsFiltered = (newFilter === '')\n  ? persons\n  : persons.filter(\n    v => v.name.toLowerCase().includes((newFilter).toLowerCase()) //toLowerCase() is used to handle\n    )  // insensitive case problems by lowercasing both the 'name' property and the user's input\n\n const deletePerson = id => {\n   const person = persons.find(n => n.id === id)\n   personService\n     .erase(id)\n     .then(newPersons => {\n       console.log(newPersons)\n       \n       //setPersons(newPersons.filter(item => item.id !== person.id))\n     })\n }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter text = {'filter shown with'} value={newFilter} onChange={handleFilterChange}/>\n\n      <h2>add a new</h2>\n      <PersonsForm \n      onSubmit = {addPerson}\n      valueName = {newName} onChangeName = {handleNameChange}\n      valueNumber = {newNumber} onChangeNumber={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <Persons array = {personsFiltered} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}